# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# s3 deployment based on http://about.travis-ci.org/blog/2012-12-18-travis-artifacts/

# send to fully-virtualized infrastructure: https://docs.travis-ci.com/user/trusty-ci-environment/
sudo: required
dist: trusty

cache:
  directories:
  - $HOME/.m2

# do not cache our own artifacts
before_cache:
  - rm -rf $HOME/.m2/repository/org/apache/flink/

install: true

language: java

# - define unique cache names in case the auto-generated ones are not unique
#  (see https://docs.travis-ci.com/user/caching/#Caches-and-build-matrices)
# - See https://issues.apache.org/jira/browse/FLINK-1072
jdk: "openjdk8"
script: "./nightly.sh"

matrix:
  include:
    - env:
      - PROFILE="-Dhadoop.version=2.8.3"
      - SCRIPT="split_misc.sh"
    - env:
      - PROFILE="-Dhadoop.version=2.8.3"
      - SCRIPT="split_ha.sh"
    - env:
      - PROFILE="-Dhadoop.version=2.8.3"
      - SCRIPT="split_sticky.sh"
    - env:
      - PROFILE="-Dhadoop.version=2.8.3"
      - SCRIPT="split_checkpoints.sh"

git:
  depth: 100

env:
    global:
        # Global variable to avoid hanging travis builds when downloading cache archives.
        - MALLOC_ARENA_MAX=2
        # Build artifacts like logs (variables for apache/flink repo)
        - secure: "gL3QRn6/XyVK+Em9RmVqpM6nbTwlhjK4/JiRYZGGCkBgTq4ZnG+Eq2qKAO22TAsqRSi7g7WAoAhUulPt0SJqH7hjMe0LetbO0izbVXDefwf2PJlsNgBbuFG6604++VUaUEyfPYYw9ADjV59LWG7+B/fjbRsevqRBZ30b1gv/tQQ="
        - secure: "eM9r8IglvnUKctxz/ga6hwGnCpdOvGyYdGj0H/UiNDEx3Lq1A6yp3gChEIXGJqRUXDI5TaIuidunUGY7KHml8urm8eG2Yk2ttxXehZqLpEaOU2jdNJCdLX8tlVfh14T9bxG5AYHQEV3qJUqDFtfXD3whvzuinrm1oEIA3qUxiA8="
        - secure: "EQYDWgJM5ANJ/sAFwmSEwSTOe9CDN/ENyQAr5/ntM67XanhTZj2Amgt9LthCRUU4EEPl/OFUTwNHMpv/+wa3q7dwVFldSIg5wyCndzJSATPyPBVjYgsXIQZVIjsq4TwTyrTteT55V6Oz2+l27Fvung2FPuN83ovswsJePFzMBxI="
        - CHANGE_MINIKUBE_NONE_USER=true

before_script:
  - gem install --no-document --version 0.8.9 faraday
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - sudo minikube start --vm-driver=none --kubernetes-version=v1.11.0
  # Fix the kubectl context, as it's often stale.
  - minikube update-context
  # Wait for Kubernetes to be up and ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

# Install maven 3.2.5 since trusty uses 3.3.9 for which shading is broken
before_install:
   - "wget https://archive.apache.org/dist/maven/maven-3/3.2.5/binaries/apache-maven-3.2.5-bin.zip"
   - "unzip -qq apache-maven-3.2.5-bin.zip"
   - "rm apache-maven-3.2.5-bin.zip"
   - "export M2_HOME=$PWD/apache-maven-3.2.5"
   - "export PATH=$M2_HOME/bin:$PATH"
   - "export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\""
# just in case: clean up the .m2 home and remove invalid jar files
   - 'test ! -d $HOME/.m2/repository/ || find $HOME/.m2/repository/ -name "*.jar" -exec sh -c ''if ! zip -T {} >/dev/null ; then echo "deleting invalid file: {}"; rm {} ; fi'' \;'

notifications:
  slack:
    rooms:
      - secure: G8UfehSohNAjEaiUmq74h+0+VEmf3kGs1mntNDxEMdvlkISHMUNJ9YUyqhKCIou9Z3gl+rSmCG1A5izEMSdWZAJJIx5k2fVGHFoC34Ko/z+5FwrNTaEomUUVM4VMePsZRYXpaDb7E/xNJQH1aS34S3RSoJCz/Jxb86Ip72yOZtk2VtC/3JJnojuLjX56oVlnE2XpctmxMQ2RIxHrcIddH21WKq7UxUuA/0nltItuTJNqYEl5KAHE4lT2F2d7eMYJCv9PMX2fBFlEQ1XqSShg7MogEHexdvsWoF5MYeqkjIIylFkyyagUvJQIeDM/bG2w6gNF6wxsmcioU3uUmJ9CW2ZZPFv0lhYOeVpeithXKamSTrMOJixswTZf3Rb4YzFUcaBvjhWvMJiiodf+m8SNyZdi0ntRZloeF9MVLRmU/h1T13u2t3xbtDgjsJ9zwqOqB7gQjt4S5QKceucZxws9CrbnNX+PPDX/wznfJ4Bo9IAVUYMsX6yY8+LjX8xgDO2gdaxXDdnzTCL4bQNt4XKbmDnXYn+N6esqITSucEoc5c3H2dYQLkKNo1uMP0UwmaS3iduKBCNvTUSEZROqKmdwXPG6WFcCgdq+L6UKDIGG7GQ+ABQ/oRSfZ5vfWcrDniPAs9Xw2EKfgwfceRZtdwVL7GyfTdrFSJjxHfCAG2+n2F4=
      - secure: Y3tLJdbPWPvMfhrs1ImLYCU5xomNgvgLjhOzk+U0gJEY2l8oiQoGpskmKrXxGvDtomwwuRkZ1VXntsjw2zEEG+0T/L9bYlHF83zg5MXWPdAZSrM99fXB0dU75C97Ac0vk4nQwwAKkcD1neWh4OLEYH0+PJrbp/pjz86NbbTovB8RdTKPdiOL6BjlVObLQZXBbAv0gXRnLazID/VV9dCeGkuOshej6TWbCdbEA35vSIQpz6Rci1oufF4dpMs914df++wbWRGQ+GxwXgJc6fpBWT+s62Q6wrNTSQWhGgErEnzTq/JBGb4KTK82XW/fvohAM5oMugv/FV4Llm7B9evUjB8lPvP20EZmPpCTChFsEj0Afpzw+S+q8NLZ7hz7p6qnP7rOWCMw+R0RfrbXzUQ1plUJg4Fc5Vm6nICDoFSxE0dutSOGlYdPyqIHZNv9WPYCTHQKDT6qDNP17tHxyPIS2bEB1rcai5x5KTXqWtnhPZpPb46pjWrvkCOLMLQ4ONzXKi4XWyuxIFnO3W+godUvja6ChveN/iTrp70lI8vz9AbvS+KA3XW9Hn4JruXP66QsiaORu7wvMUr4WaClYMqe98QS18hqS9OCqlEhOxWun8+l7P7UBoeMAIgLfUODmizMjywWBUwiBWz7P9E1rlZ5Sdf9srvJylsnciTGebPQzcE=
    on_success: never
    on_pull_requests: false
